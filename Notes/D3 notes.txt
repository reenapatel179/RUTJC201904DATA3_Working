WHat is availibility network?

cdn - content delivery network

coundflare. net is cdn

cdnjs

Start server to access CSV files use this command - python -m http.server

source activate PythonData
python -m http.server // run this command in your root folder

Then open Localhost:8000 port and inspect html page
------------------------------------------------

Anonymous function -

test(function (d) { return d;}) //one way

function (date,index) { }// sencond way , index can be optional


-----------------------

// Answer the following questions after discussing with a partner.
/* 1. What does SVG stand for? How are they used with D3? */


Scalable Vector Graphics (SVG) is a way to render graphical elements and images in the DOM. As SVG is vector-based, it’s both lightweight and scalable. D3 uses SVG to create all its visuals, and therefore it is a core building block of the library.

Here in the example below, a rectangle is being drawn using D3 in an SVG container.

//Select SVG elementvar svg = d3.select('svg');
//Create rectangle element inside SVGsvg.append('rect')   .attr('x', 50)   .attr('y', 50)   .attr('widt



/* 2. What is data binding? */

The next concept you’ll need to learn is data binding, as that’s one of the coolest features of D3. Using it, we can populate or manipulate DOM elements in real-time.

In our HTML, we have a simple unordered list <ul>:

<ul> </ul>
We want to create the list elements using a data object. Here’s the code for doing exactly that:

/* 3. Given the following and an HTML page with no elements currently in the body,
use the enter() pattern to render three <li> elements to the page with text matching
the integers in the array. */
var arr = [1, 2, 3];
var ul = d3.select("body").append("ul");
// YOUR CODE HERE//
/* 4. Imagine three <li> elements already exist on the page.  Create code to update the text of those elements while also adding three new elements to match the array below. */
// Leave the number 3 code uncommented as it is needed for number 4 to work properly.
var arr = [1, 1, 2, 3, 5, 8];
var ul = d3.select("ul");
// YOUR CODE HERE //
/* Bonus - Refactor your solution to number 4 above using the ES6 syntax for arrow functions. Then, modify the code to set the text of each
element to "<index in the array>: <item from the array>" */
// Be sure to comment out your number 4 code (not the arr or ul variables) before running your bonus code.
// YOUR CODE HERE //
